"use client";
import "~/styles/globals.css";

import {
  cacheExchange,
  createClient,
  fetchExchange,
  ssrExchange,
} from "@urql/core";
import { UrqlProvider } from "@urql/next";
import { Inter } from "next/font/google";
import { useMemo } from "react";
import { authExchange } from "@urql/exchange-auth";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
});

// export const metadata = {
//   title: "Create T3 App",
//   description: "Generated by create-t3-app",
//   icons: [{ rel: "icon", url: "/favicon.ico" }],
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [client, ssr] = useMemo(() => {
    const ssr = ssrExchange({
      isClient: typeof window !== "undefined",
    });
    const client = createClient({
      url: "https://sdp-sandbox-billing.cluster01.viind.io/graphql",
      exchanges: [
        cacheExchange,
        authExchange(async (utilities) => {
          const token = "pLdY3ulLws0XboEe5Z7BNyyYWSNrGt3a";
          return {
            addAuthToOperation: (operation) => {
              console.log("addAuthToOperation", operation);
              return utilities.appendHeaders(operation, {
                Authorization: `Bearer ${token}`,
              });
            },
            didAuthError(error) {
              // todo: check if correct
              return error.graphQLErrors.some(
                (e) => e.extensions?.code === "UNAUTHORIZED",
              );
            },
            willAuthError() {
              return false;
            },
            refreshAuth: async () => {
              // only present to satisfy the type signature
            },
          };
        }),
        ssr,
        fetchExchange,
      ],
      suspense: true,
    });

    // client.subscribeToDebugTarget?.(console.log);

    return [client, ssr];
  }, []);
  return (
    <UrqlProvider client={client} ssr={ssr}>
      <html lang="en">
        <body className={`font-sans ${inter.variable}`}>{children}</body>
      </html>
    </UrqlProvider>
  );
}
